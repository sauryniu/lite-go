// Code generated by MockGen. DO NOT EDIT.
// Source: object\i-id-generator.go

// Package object is a generated GoMock package.
package object

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIIDGenerator is a mock of IIDGenerator interface
type MockIIDGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockIIDGeneratorMockRecorder
}

// MockIIDGeneratorMockRecorder is the mock recorder for MockIIDGenerator
type MockIIDGeneratorMockRecorder struct {
	mock *MockIIDGenerator
}

// NewMockIIDGenerator creates a new mock instance
func NewMockIIDGenerator(ctrl *gomock.Controller) *MockIIDGenerator {
	mock := &MockIIDGenerator{ctrl: ctrl}
	mock.recorder = &MockIIDGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIIDGenerator) EXPECT() *MockIIDGeneratorMockRecorder {
	return m.recorder
}

// Generate mocks base method
func (m *MockIIDGenerator) Generate() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate")
	ret0, _ := ret[0].(string)
	return ret0
}

// Generate indicates an expected call of Generate
func (mr *MockIIDGeneratorMockRecorder) Generate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockIIDGenerator)(nil).Generate))
}
