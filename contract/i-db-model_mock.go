// Code generated by MockGen. DO NOT EDIT.
// Source: contract\i-db-model.go

// Package contract is a generated GoMock package.
package contract

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIDbModel is a mock of IDbModel interface.
type MockIDbModel struct {
	ctrl     *gomock.Controller
	recorder *MockIDbModelMockRecorder
}

// MockIDbModelMockRecorder is the mock recorder for MockIDbModel.
type MockIDbModelMockRecorder struct {
	mock *MockIDbModel
}

// NewMockIDbModel creates a new mock instance.
func NewMockIDbModel(ctrl *gomock.Controller) *MockIDbModel {
	mock := &MockIDbModel{ctrl: ctrl}
	mock.recorder = &MockIDbModelMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDbModel) EXPECT() *MockIDbModelMockRecorder {
	return m.recorder
}

// GetID mocks base method.
func (m *MockIDbModel) GetID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetID indicates an expected call of GetID.
func (mr *MockIDbModelMockRecorder) GetID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetID", reflect.TypeOf((*MockIDbModel)(nil).GetID))
}
