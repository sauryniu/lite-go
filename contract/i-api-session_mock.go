// Code generated by MockGen. DO NOT EDIT.
// Source: contract\i-api-session.go

// Package contract is a generated GoMock package.
package contract

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIApiSession is a mock of IApiSession interface
type MockIApiSession struct {
	ctrl     *gomock.Controller
	recorder *MockIApiSessionMockRecorder
}

// MockIApiSessionMockRecorder is the mock recorder for MockIApiSession
type MockIApiSessionMockRecorder struct {
	mock *MockIApiSession
}

// NewMockIApiSession creates a new mock instance
func NewMockIApiSession(ctrl *gomock.Controller) *MockIApiSession {
	mock := &MockIApiSession{ctrl: ctrl}
	mock.recorder = &MockIApiSessionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIApiSession) EXPECT() *MockIApiSessionMockRecorder {
	return m.recorder
}

// initSession mocks base method
func (m *MockIApiSession) initSession(req interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "initSession", req)
	ret0, _ := ret[0].(error)
	return ret0
}

// initSession indicates an expected call of initSession
func (mr *MockIApiSessionMockRecorder) initSession(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "initSession", reflect.TypeOf((*MockIApiSession)(nil).initSession), req)
}
