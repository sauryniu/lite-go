// Code generated by MockGen. DO NOT EDIT.
// Source: contract\i-db-repository.go

// Package contract is a generated GoMock package.
package contract

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIDbRepository is a mock of IDbRepository interface.
type MockIDbRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIDbRepositoryMockRecorder
}

// MockIDbRepositoryMockRecorder is the mock recorder for MockIDbRepository.
type MockIDbRepositoryMockRecorder struct {
	mock *MockIDbRepository
}

// NewMockIDbRepository creates a new mock instance.
func NewMockIDbRepository(ctrl *gomock.Controller) *MockIDbRepository {
	mock := &MockIDbRepository{ctrl: ctrl}
	mock.recorder = &MockIDbRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDbRepository) EXPECT() *MockIDbRepositoryMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockIDbRepository) Add(entry IDbModel) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", entry)
	ret0, _ := ret[0].(error)
	return ret0
}

// Add indicates an expected call of Add.
func (mr *MockIDbRepositoryMockRecorder) Add(entry interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockIDbRepository)(nil).Add), entry)
}

// Query mocks base method.
func (m *MockIDbRepository) Query() IDbQuery {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Query")
	ret0, _ := ret[0].(IDbQuery)
	return ret0
}

// Query indicates an expected call of Query.
func (mr *MockIDbRepositoryMockRecorder) Query() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Query", reflect.TypeOf((*MockIDbRepository)(nil).Query))
}

// Remove mocks base method.
func (m *MockIDbRepository) Remove(entry IDbModel) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Remove", entry)
	ret0, _ := ret[0].(error)
	return ret0
}

// Remove indicates an expected call of Remove.
func (mr *MockIDbRepositoryMockRecorder) Remove(entry interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Remove", reflect.TypeOf((*MockIDbRepository)(nil).Remove), entry)
}

// Save mocks base method.
func (m *MockIDbRepository) Save(entry IDbModel) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", entry)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockIDbRepositoryMockRecorder) Save(entry interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockIDbRepository)(nil).Save), entry)
}
