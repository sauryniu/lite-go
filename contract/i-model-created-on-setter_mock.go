// Code generated by MockGen. DO NOT EDIT.
// Source: contract\i-model-created-on-setter.go

// Package contract is a generated GoMock package.
package contract

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIModelCreatedOnSetter is a mock of IModelCreatedOnSetter interface.
type MockIModelCreatedOnSetter struct {
	ctrl     *gomock.Controller
	recorder *MockIModelCreatedOnSetterMockRecorder
}

// MockIModelCreatedOnSetterMockRecorder is the mock recorder for MockIModelCreatedOnSetter.
type MockIModelCreatedOnSetterMockRecorder struct {
	mock *MockIModelCreatedOnSetter
}

// NewMockIModelCreatedOnSetter creates a new mock instance.
func NewMockIModelCreatedOnSetter(ctrl *gomock.Controller) *MockIModelCreatedOnSetter {
	mock := &MockIModelCreatedOnSetter{ctrl: ctrl}
	mock.recorder = &MockIModelCreatedOnSetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIModelCreatedOnSetter) EXPECT() *MockIModelCreatedOnSetterMockRecorder {
	return m.recorder
}

// SetCreatedOn mocks base method.
func (m *MockIModelCreatedOnSetter) SetCreatedOn(v int64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetCreatedOn", v)
}

// SetCreatedOn indicates an expected call of SetCreatedOn.
func (mr *MockIModelCreatedOnSetterMockRecorder) SetCreatedOn(v interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetCreatedOn", reflect.TypeOf((*MockIModelCreatedOnSetter)(nil).SetCreatedOn), v)
}
