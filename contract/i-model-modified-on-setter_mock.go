// Code generated by MockGen. DO NOT EDIT.
// Source: contract\i-model-modified-on-setter.go

// Package contract is a generated GoMock package.
package contract

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIModelModifiedOnSetter is a mock of IModelModifiedOnSetter interface.
type MockIModelModifiedOnSetter struct {
	ctrl     *gomock.Controller
	recorder *MockIModelModifiedOnSetterMockRecorder
}

// MockIModelModifiedOnSetterMockRecorder is the mock recorder for MockIModelModifiedOnSetter.
type MockIModelModifiedOnSetterMockRecorder struct {
	mock *MockIModelModifiedOnSetter
}

// NewMockIModelModifiedOnSetter creates a new mock instance.
func NewMockIModelModifiedOnSetter(ctrl *gomock.Controller) *MockIModelModifiedOnSetter {
	mock := &MockIModelModifiedOnSetter{ctrl: ctrl}
	mock.recorder = &MockIModelModifiedOnSetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIModelModifiedOnSetter) EXPECT() *MockIModelModifiedOnSetterMockRecorder {
	return m.recorder
}

// SetModifiedOn mocks base method.
func (m *MockIModelModifiedOnSetter) SetModifiedOn(v int64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetModifiedOn", v)
}

// SetModifiedOn indicates an expected call of SetModifiedOn.
func (mr *MockIModelModifiedOnSetterMockRecorder) SetModifiedOn(v interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetModifiedOn", reflect.TypeOf((*MockIModelModifiedOnSetter)(nil).SetModifiedOn), v)
}
