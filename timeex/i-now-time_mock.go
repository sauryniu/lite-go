// Code generated by MockGen. DO NOT EDIT.
// Source: timeex\i-now-time.go

// Package timeex is a generated GoMock package.
package timeex

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockINowTime is a mock of INowTime interface
type MockINowTime struct {
	ctrl     *gomock.Controller
	recorder *MockINowTimeMockRecorder
}

// MockINowTimeMockRecorder is the mock recorder for MockINowTime
type MockINowTimeMockRecorder struct {
	mock *MockINowTime
}

// NewMockINowTime creates a new mock instance
func NewMockINowTime(ctrl *gomock.Controller) *MockINowTime {
	mock := &MockINowTime{ctrl: ctrl}
	mock.recorder = &MockINowTimeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockINowTime) EXPECT() *MockINowTimeMockRecorder {
	return m.recorder
}

// NanoUnix mocks base method
func (m *MockINowTime) NanoUnix() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NanoUnix")
	ret0, _ := ret[0].(int64)
	return ret0
}

// NanoUnix indicates an expected call of NanoUnix
func (mr *MockINowTimeMockRecorder) NanoUnix() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NanoUnix", reflect.TypeOf((*MockINowTime)(nil).NanoUnix))
}

// Unix mocks base method
func (m *MockINowTime) Unix() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Unix")
	ret0, _ := ret[0].(int64)
	return ret0
}

// Unix indicates an expected call of Unix
func (mr *MockINowTimeMockRecorder) Unix() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Unix", reflect.TypeOf((*MockINowTime)(nil).Unix))
}
